name: Build
on:
  push:
    branches:
      - main
      - v2

jobs:
  development-build:
    name: Development Build
    if: github.ref == 'refs/heads/v2'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v2
      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login docker.io -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Development Build Script
        run: |
          docker build -f ./Dockerfile . -t flagedu-affiliate:dev2
          docker tag flagedu-affiliate:dev2 menaheero/flagedu-affiliate:dev2
          docker push menaheero/flagedu-affiliate:dev2
  # development-deploy:
  #   name: Development Deploy
  #   needs: development-build
  #   if: github.ref == 'refs/heads/dev'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Development Frontend Build & Deploy
  #       env:
  #         SERVER_PRIVATE_KEY: ${{ secrets.DEV_SERVER_SSH_PRIVATE_KEY }}
  #         HOST: ${{ secrets.DEV_SERVER_IP }}
  #         USERNAME: ${{ secrets.DEV_SERVER_USERNAME }}
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "$SERVER_PRIVATE_KEY" >> ~/.ssh/id_rsa_alltargeting_frontend
  #         chmod 600 ~/.ssh/id_rsa_alltargeting_frontend
  #         eval "$(ssh-agent -s)"
  #         ssh-add ~/.ssh/id_rsa_alltargeting_frontend
  #         ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
  #         ssh $USERNAME@$HOST "cd /www/flagedu/ && docker-compose pull frontend && docker-compose stop frontend && docker-compose up -d frontend; rm -r frontend/_nuxt/ &> /dev/null; docker cp alltargeting_frontend:/app/.nuxt/dist/client/ frontend/_nuxt; sleep 5s;"

  production-build:
    name: Development Build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v2
      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login docker.io -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Development Build Script
        run: |
          docker build -f ./Dockerfile . -t flagedu-affiliate:dev2
          docker tag flagedu-affiliate:dev2 menaheero/flagedu-affiliate:dev2
          docker push menaheero/flagedu-affiliate:dev2
  production-deploy:
    name: Production Deploy
    needs: production-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Production Frontend Build & Deploy
        env:
          SERVER_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.SERVER_USERNAME }}
        run: |
          mkdir -p ~/.ssh
          echo "$SERVER_PRIVATE_KEY" >> ~/.ssh/id_rsa_alltargeting_frontend
          chmod 600 ~/.ssh/id_rsa_alltargeting_frontend
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa_alltargeting_frontend
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          ssh $USERNAME@$HOST "cd /www/fl/src/Front-Affiliate && docker-compose pull frontend && docker-compose stop frontend && docker-compose up -d frontend; rm -r frontend/_nuxt/ &> /dev/null; docker cp flagedu_affiliate:/app/.nuxt/dist/client/ frontend/_nuxt; sleep 5s;"
